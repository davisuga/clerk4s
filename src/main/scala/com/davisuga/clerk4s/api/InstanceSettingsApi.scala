/**
 * Clerk Backend API
 * The Clerk REST Backend API, meant to be accessed by backend servers. Please see https://clerk.com/docs for more information.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@clerk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.davisuga.clerk4s.api

import com.davisuga.clerk4s.model.ClerkErrors
import com.davisuga.clerk4s.model.InstanceRestrictions
import com.davisuga.clerk4s.model.OrganizationSettings
import com.davisuga.clerk4s.model.UpdateInstanceOrganizationSettingsRequest
import com.davisuga.clerk4s.model.UpdateInstanceRequest
import com.davisuga.clerk4s.model.UpdateInstanceRestrictionsRequest
import com.davisuga.clerk4s.core.JsonSupport._
import sttp.client3._
import sttp.model.Method

object InstanceSettingsApi {

def apply(baseUrl: String = "https://api.clerk.com/v1") = new InstanceSettingsApi(baseUrl)
}

class InstanceSettingsApi(baseUrl: String) {

  /**
   * Updates the settings of an instance
   * 
   * Expected answers:
   *   code 204 :  (Accepted)
   *   code 422 : ClerkErrors (Invalid request parameters)
   * 
   * Available security schemes:
   *   bearerAuth (http)
   * 
   * @param updateInstanceRequest 
   */
  def updateInstance(bearerToken: String)(updateInstanceRequest: Option[UpdateInstanceRequest] = None
): Request[Either[ResponseException[String, Exception], Unit], Any] =
    basicRequest
      .method(Method.PATCH, uri"$baseUrl/instance")
      .contentType("application/json")
      .auth.bearer(bearerToken)
      .body(updateInstanceRequest)
      .response(asJson[Unit])

  /**
   * Updates the organization settings of the instance
   * 
   * Expected answers:
   *   code 200 : OrganizationSettings (Success)
   *   code 422 : ClerkErrors (Invalid request parameters)
   * 
   * Available security schemes:
   *   bearerAuth (http)
   * 
   * @param updateInstanceOrganizationSettingsRequest 
   */
  def updateInstanceOrganizationSettings(bearerToken: String)(updateInstanceOrganizationSettingsRequest: Option[UpdateInstanceOrganizationSettingsRequest] = None
): Request[Either[ResponseException[String, Exception], OrganizationSettings], Any] =
    basicRequest
      .method(Method.PATCH, uri"$baseUrl/instance/organization_settings")
      .contentType("application/json")
      .auth.bearer(bearerToken)
      .body(updateInstanceOrganizationSettingsRequest)
      .response(asJson[OrganizationSettings])

  /**
   * Updates the restriction settings of an instance
   * 
   * Expected answers:
   *   code 200 : InstanceRestrictions (Success)
   *   code 402 : ClerkErrors (Payment required)
   * 
   * Available security schemes:
   *   bearerAuth (http)
   * 
   * @param updateInstanceRestrictionsRequest 
   */
  def updateInstanceRestrictions(bearerToken: String)(updateInstanceRestrictionsRequest: Option[UpdateInstanceRestrictionsRequest] = None
): Request[Either[ResponseException[String, Exception], InstanceRestrictions], Any] =
    basicRequest
      .method(Method.PATCH, uri"$baseUrl/instance/restrictions")
      .contentType("application/json")
      .auth.bearer(bearerToken)
      .body(updateInstanceRestrictionsRequest)
      .response(asJson[InstanceRestrictions])

}
