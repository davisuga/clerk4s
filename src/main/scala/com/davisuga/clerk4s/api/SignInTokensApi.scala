/**
 * Clerk Backend API
 * The Clerk REST Backend API, meant to be accessed by backend servers. Please see https://clerk.com/docs for more information.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@clerk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.davisuga.clerk4s.api

import com.davisuga.clerk4s.model.ClerkErrors
import com.davisuga.clerk4s.model.CreateSignInTokenRequest
import com.davisuga.clerk4s.model.SignInToken
import com.davisuga.clerk4s.core.JsonSupport._
import sttp.client3._
import sttp.model.Method

object SignInTokensApi {

def apply(baseUrl: String = "https://api.clerk.com/v1") = new SignInTokensApi(baseUrl)
}

class SignInTokensApi(baseUrl: String) {

  /**
   * Creates a new sign-in token and associates it with the given user. By default, sign-in tokens expire in 30 days. You can optionally supply a different duration in seconds using the `expires_in_seconds` property.
   * 
   * Expected answers:
   *   code 200 : SignInToken (Success)
   *   code 404 : ClerkErrors (Resource not found)
   *   code 422 : ClerkErrors (Invalid request parameters)
   * 
   * Available security schemes:
   *   bearerAuth (http)
   * 
   * @param createSignInTokenRequest 
   */
  def createSignInToken(bearerToken: String)(createSignInTokenRequest: Option[CreateSignInTokenRequest] = None
): Request[Either[ResponseException[String, Exception], SignInToken], Any] =
    basicRequest
      .method(Method.POST, uri"$baseUrl/sign_in_tokens")
      .contentType("application/json")
      .auth.bearer(bearerToken)
      .body(createSignInTokenRequest)
      .response(asJson[SignInToken])

  /**
   * Revokes a pending sign-in token
   * 
   * Expected answers:
   *   code 200 : SignInToken (Success)
   *   code 400 : ClerkErrors (Request was not successful)
   *   code 404 : ClerkErrors (Resource not found)
   * 
   * Available security schemes:
   *   bearerAuth (http)
   * 
   * @param signInTokenId The ID of the sign-in token to be revoked
   */
  def revokeSignInToken(bearerToken: String)(signInTokenId: String
): Request[Either[ResponseException[String, Exception], SignInToken], Any] =
    basicRequest
      .method(Method.POST, uri"$baseUrl/sign_in_tokens/${signInTokenId}/revoke")
      .contentType("application/json")
      .auth.bearer(bearerToken)
      .response(asJson[SignInToken])

}
