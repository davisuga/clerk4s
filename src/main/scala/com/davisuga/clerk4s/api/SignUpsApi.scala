/**
 * Clerk Backend API
 * The Clerk REST Backend API, meant to be accessed by backend servers. Please see https://clerk.com/docs for more information.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@clerk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.davisuga.clerk4s.api

import com.davisuga.clerk4s.model.ClerkErrors
import com.davisuga.clerk4s.model.SignUp
import com.davisuga.clerk4s.model.UpdateSignUpRequest
import com.davisuga.clerk4s.core.JsonSupport._
import sttp.client3._
import sttp.model.Method

object SignUpsApi {

def apply(baseUrl: String = "https://api.clerk.com/v1") = new SignUpsApi(baseUrl)
}

class SignUpsApi(baseUrl: String) {

  /**
   * Update the sign-up with the given ID
   * 
   * Expected answers:
   *   code 200 : SignUp (Success)
   *   code 403 : ClerkErrors (Authorization invalid)
   * 
   * Available security schemes:
   *   bearerAuth (http)
   * 
   * @param id The ID of the sign-up to update
   * @param updateSignUpRequest 
   */
  def updateSignUp(bearerToken: String)(id: String, updateSignUpRequest: Option[UpdateSignUpRequest] = None
): Request[Either[ResponseException[String, Exception], SignUp], Any] =
    basicRequest
      .method(Method.PATCH, uri"$baseUrl/sign_ups/${id}")
      .contentType("application/json")
      .auth.bearer(bearerToken)
      .body(updateSignUpRequest)
      .response(asJson[SignUp])

}
